import{html,Polymer}from"../../../@polymer/polymer/polymer-legacy.js";import"../../../@polymer/iron-icons/editor-icons.js";import"../../../@polymer/paper-tooltip/paper-tooltip.js";import"../../../@polymer/paper-fab/paper-fab.js";import"../../../@polymer/app-layout/app-header/app-header.js";import"../../../@polymer/app-layout/app-toolbar/app-toolbar.js";import"./haxcms-outline-editor-dialog.js";import"./haxcms-manifest-editor-dialog.js";Polymer({_template:html`
    <style is="custom-style">
      :host {
        display: block;
      }
      paper-fab {
        margin: 16px;
        padding: 2px;
        width: 40px;
        height: 40px;
        z-index: 1000;
        background-color: var(--haxcms-color, #ff4081);
        transition: all 0.6s linear;
      }
      #editbutton,
      #deletebutton {
        visibility: hidden;
        opacity: 0;
      }
      :host([page-allowed]) #editbutton,
      :host([page-allowed]) #deletebutton {
        visibility: visible;
        opacity: 1;
      }
      :host([edit-mode]) #editbutton {
        width: 100%;
        z-index: 1001;
        border-radius: 0;
        height: 64px;
        margin: 0;
        padding: 8px;
        background-color: var(--paper-blue-500) !important;
        position: absolute;
      }
      app-header {
        opacity: 0.5;
        position: fixed;
        right: 0;
        bottom: 0;
        background-color: pink;
        color: black;
        margin: 0;
        padding: 0;
        transition: all 0.6s linear;
      }
      app-header:hover,
      app-header:active,
      app-header:focus {
        opacity: 1;
      }
      app-toolbar {
        padding: 0;
        margin: 0;
      }
      div[main-title] {
        font-size: 12px;
        width: 200px;
        text-overflow: ellipsis;
        overflow: hidden;
      }
    </style>
    <app-header>
      <app-toolbar>
        <paper-fab
          id="editbutton"
          icon="[[__editIcon]]"
          on-tap="_editButtonTap"
        ></paper-fab>
        <paper-tooltip for="editbutton" position="top" offset="14"
          >[[__editText]]</paper-tooltip
        >
        <paper-icon-button
          id="deletebutton"
          icon="icons:delete"
          on-tap="_deleteButtonTap"
        ></paper-icon-button>
        <paper-tooltip for="deletebutton" position="top" offset="14"
          >delete</paper-tooltip
        >
        <div main-title>[[activeItem.title]]</div>
        <paper-icon-button
          id="addbutton"
          icon="icons:add"
          on-tap="_addButtonTap"
        ></paper-icon-button>
        <paper-tooltip for="addbutton" position="top" offset="14"
          >add page</paper-tooltip
        >
        <paper-icon-button
          id="outlinebutton"
          icon="icons:list"
          on-tap="_outlineButtonTap"
        ></paper-icon-button>
        <paper-tooltip for="outlinebutton" position="top" offset="14"
          >site outline</paper-tooltip
        >
        <paper-icon-button
          id="manifestbutton"
          icon="icons:settings"
          on-tap="_manifestButtonTap"
        ></paper-icon-button>
        <paper-tooltip for="manifestbutton" position="top" offset="14"
          >site details</paper-tooltip
        >
      </app-toolbar>
    </app-header>
  `,is:"haxcms-site-editor-ui",properties:{activeItem:{type:Object,value:{},observer:"_activeItemChanged"},manifest:{type:Object,notify:!0},pageAllowed:{type:Boolean,value:!1,reflectToAttribute:!0},editMode:{type:Boolean,reflectToAttribute:!0,observer:"_editModeChanged",value:!1,notify:!0},manifestEditMode:{type:Boolean,reflectToAttribute:!0,observer:"_manifestEditModeChanged",value:!1,notify:!0}},_activeItemChanged:function(newValue){if(newValue.id){this.pageAllowed=!0}else{this.pageAllowed=!1}},_editButtonTap:function(){this.editMode=!this.editMode},_addButtonTap:function(){let form=document.createElement("eco-json-schema-object"),outline=window.JSONOutlineSchema.requestAvailability();form.schema=outline.getItemSchema("item");form.value=outline.getItemValues(null,this.activeItem);const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!1,detail:{title:"Add a new page",elements:{content:form},invokedBy:this.$.addbutton,clone:!1}});window.dispatchEvent(evt)},_deleteButtonTap:function(){let c=document.createElement("span");c.innerHTML="Page is removed from the outline but its content stays on the file system.";const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!1,detail:{title:"Are you sure you want to delete this page?",elements:{content:c},invokedBy:this.$.deletebutton,clone:!1}});window.dispatchEvent(evt)},_outlineButtonTap:function(){let c=document.createElement("haxcms-outline-editor-dialog");c.set("manifest",this.manifest);const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!1,detail:{title:"Edit site outline",elements:{content:c},invokedBy:this.$.outlinebutton,clone:!1}});window.dispatchEvent(evt)},_manifestButtonTap:function(){let c=document.createElement("haxcms-manifest-editor-dialog");const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!1,detail:{title:"Edit site settings",elements:{content:c},invokedBy:this.$.manifestbutton,clone:!1}});window.dispatchEvent(evt)},_editModeChanged:function(newValue){if(newValue){this.__editIcon="icons:save";this.__editText="Save"}else{this.__editIcon="editor:mode-edit";this.__editText="edit page"}this.fire("haxcms-edit-mode-changed",newValue);window.HaxStore.write("editMode",newValue,this)},_outlineEditModeChanged:function(newValue){this.fire("haxcms-outline-edit-mode-changed",newValue)},_manifestEditModeChanged:function(newValue){this.fire("haxcms-manifest-edit-mode-changed",newValue)}});