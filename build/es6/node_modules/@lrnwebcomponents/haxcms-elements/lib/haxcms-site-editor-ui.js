import{html,Polymer}from"../../../@polymer/polymer/polymer-legacy.js";import"../../../@polymer/iron-icons/editor-icons.js";import"../../../@polymer/paper-tooltip/paper-tooltip.js";import"../../../@polymer/paper-fab/paper-fab.js";import"./haxcms-outline-editor-dialog.js";import"./haxcms-manifest-editor-dialog.js";Polymer({_template:html`
    <style is="custom-style">
      :host {
        display: block;
        position: fixed;
        right: 0;
        bottom: 0;
      }
      paper-fab {
        display: inline-flex;
        margin: 0px;
        padding: 0px;
        width: 40px;
        height: 40px;
        z-index: 1000;
        background-color: var(--haxcms-color, #ff4081);
        transition: all 0.6s linear;
      }
      #editbutton,
      #deletebutton {
        visibility: hidden;
        opacity: 0;
      }
      :host([page-allowed]) #editbutton,
      :host([page-allowed]) #deletebutton {
        visibility: visible;
        opacity: 1;
      }
      :host([edit-mode]) #editbutton {
        width: 100%;
        z-index: 1001;
        border-radius: 0;
        height: 64px;
        margin: 0;
        padding: 8px;
        background-color: var(--paper-blue-500) !important;
        position: absolute;
      }
      .wrapper {
        width: 0px;
        height: 40px;
        opacity: 0.2;
        background-color: pink;
        color: black;
        transition: all 0.6s linear;
        display: inline-flex;
      }
      :host([menu-mode]) .wrapper {
        opacity: 0.6;
        width: auto;
      }
      :host([menu-mode]) .wrapper:hover,
      :host([menu-mode]) .wrapper:active,
      :host([menu-mode]) .wrapper:focus {
        opacity: 1;
      }
      .main-title {
        font-size: 10px;
        width: 150px;
        text-overflow: ellipsis;
        overflow: hidden;
        line-height: 40px;
      }
    </style>
    <paper-fab
      id="menubutton"
      icon="icons:menu"
      on-tap="_menuButtonTap"
    ></paper-fab>
    <paper-tooltip for="menubutton" position="top" offset="14"
      >toggle menu</paper-tooltip
    >
    <paper-fab
      id="editbutton"
      icon="[[__editIcon]]"
      on-tap="_editButtonTap"
    ></paper-fab>
    <paper-tooltip for="editbutton" position="top" offset="14"
      >[[__editText]]</paper-tooltip
    >
    <div class="wrapper">
      <paper-icon-button
        id="deletebutton"
        icon="icons:delete"
        on-tap="_deleteButtonTap"
      ></paper-icon-button>
      <paper-tooltip for="deletebutton" position="top" offset="14"
        >delete</paper-tooltip
      >
      <div class="main-title">[[activeItem.title]]</div>
      <paper-icon-button
        id="addbutton"
        icon="icons:add"
        on-tap="_addButtonTap"
      ></paper-icon-button>
      <paper-tooltip for="addbutton" position="top" offset="14"
        >add page</paper-tooltip
      >
      <paper-icon-button
        id="outlinebutton"
        icon="icons:list"
        on-tap="_outlineButtonTap"
      ></paper-icon-button>
      <paper-tooltip for="outlinebutton" position="top" offset="14"
        >site outline</paper-tooltip
      >
      <paper-icon-button
        id="manifestbutton"
        icon="icons:settings"
        on-tap="_manifestButtonTap"
      ></paper-icon-button>
      <paper-tooltip for="manifestbutton" position="top" offset="14"
        >site details</paper-tooltip
      >
    </div>
  `,is:"haxcms-site-editor-ui",properties:{activeItem:{type:Object,value:{},observer:"_activeItemChanged"},manifest:{type:Object,notify:!0},pageAllowed:{type:Boolean,value:!1,reflectToAttribute:!0},editMode:{type:Boolean,reflectToAttribute:!0,observer:"_editModeChanged",value:!1,notify:!0},menuMode:{type:Boolean,reflectToAttribute:!0,value:!1},manifestEditMode:{type:Boolean,reflectToAttribute:!0,observer:"_manifestEditModeChanged",value:!1,notify:!0}},_activeItemChanged:function(newValue){if(newValue.id){this.pageAllowed=!0}else{this.pageAllowed=!1}},_editButtonTap:function(){this.editMode=!this.editMode},_menuButtonTap:function(){this.menuMode=!this.menuMode},_addButtonTap:function(){this.__newForm=document.createElement("eco-json-schema-object");let outline=window.JSONOutlineSchema.requestAvailability();this.__newForm.schema=outline.getItemSchema("item");this.__newForm.value=outline.getItemValues(null,this.activeItem);let b1=document.createElement("paper-button");b1.raised=!0;b1.appendChild(document.createTextNode("Create"));b1.addEventListener("click",this._createNewItem.bind(this));let b2=document.createElement("paper-button");b2.appendChild(document.createTextNode("cancel"));b2.setAttribute("dialog-dismiss","dialog-dismiss");let b=document.createElement("span");b.appendChild(b1);b.appendChild(b2);const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!1,detail:{title:"Add a new page",elements:{content:this.__newForm,buttons:b},invokedBy:this.$.addbutton,clone:!1}});window.dispatchEvent(evt)},_createNewItem:function(){const evt=new CustomEvent("haxcms-create-page",{bubbles:!0,cancelable:!1,detail:{values:this.__newForm.value}});this.dispatchEvent(evt)},_deleteButtonTap:function(){let c=document.createElement("span");c.innerHTML=`"${this.activeItem.title}" will be removed from the outline but its content stays on the file system.`;let b1=document.createElement("paper-button");b1.raised=!0;b1.appendChild(document.createTextNode("Confirm"));b1.addEventListener("tap",this._deleteActive.bind(this));let b2=document.createElement("paper-button");b2.appendChild(document.createTextNode("cancel"));b2.setAttribute("dialog-dismiss","dialog-dismiss");let b=document.createElement("span");b.appendChild(b1);b.appendChild(b2);const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!1,detail:{title:"Are you sure you want to delete this page?",elements:{content:c,buttons:b},invokedBy:this.$.deletebutton,clone:!1}});window.dispatchEvent(evt)},_deleteActive:function(){const evt=new CustomEvent("haxcms-delete-page",{bubbles:!0,cancelable:!1,detail:{item:this.activeItem}});this.dispatchEvent(evt)},_outlineButtonTap:function(){let c=document.createElement("haxcms-outline-editor-dialog");c.set("manifest",this.manifest);const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!1,detail:{title:"Edit site outline",elements:{content:c},invokedBy:this.$.outlinebutton,clone:!1}});window.dispatchEvent(evt)},_manifestButtonTap:function(){let c=document.createElement("haxcms-manifest-editor-dialog");const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!1,detail:{title:"Edit site settings",elements:{content:c},invokedBy:this.$.manifestbutton,clone:!1}});window.dispatchEvent(evt)},_editModeChanged:function(newValue){if(newValue){this.__editIcon="icons:save";this.__editText="Save"}else{this.__editIcon="editor:mode-edit";this.__editText="edit page"}this.fire("haxcms-edit-mode-changed",newValue);window.HaxStore.write("editMode",newValue,this)},_outlineEditModeChanged:function(newValue){this.fire("haxcms-outline-edit-mode-changed",newValue)},_manifestEditModeChanged:function(newValue){this.fire("haxcms-manifest-edit-mode-changed",newValue)}});