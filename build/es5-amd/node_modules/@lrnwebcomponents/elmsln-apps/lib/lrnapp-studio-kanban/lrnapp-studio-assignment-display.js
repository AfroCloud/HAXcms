define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/marked-element/marked-element.js"], function (_exports, _polymerElement, _markedElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioAssignmentDisplay = void 0;

  function _templateObject_90534480bd4511e9b9d80133ff7d9ffb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n          padding: 16px;\n        }\n        #assignment-body {\n          font-size: 21px;\n        }\n      </style>\n      <h1>[[assignment.attributes.title]]</h1>\n      <marked-element\n        id=\"assignment-body\"\n        markdown=\"[[assignment.attributes.body]]\"\n      ></marked-element>\n    "]);

    _templateObject_90534480bd4511e9b9d80133ff7d9ffb = function _templateObject_90534480bd4511e9b9d80133ff7d9ffb() {
      return data;
    };

    return data;
  }

  var LrnappStudioAssignmentDisplay =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(LrnappStudioAssignmentDisplay, _PolymerElement);

    function LrnappStudioAssignmentDisplay() {
      babelHelpers.classCallCheck(this, LrnappStudioAssignmentDisplay);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappStudioAssignmentDisplay).apply(this, arguments));
    }

    babelHelpers.createClass(LrnappStudioAssignmentDisplay, null, [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_90534480bd4511e9b9d80133ff7d9ffb());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-assignment-display";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String
          },
          elmslnSection: {
            type: String
          },
          basePath: {
            type: String
          },
          csrfToken: {
            type: String
          },
          endPoint: {
            type: String
          },
          assignment: {
            type: Object
          }
        };
      }
    }]);
    return LrnappStudioAssignmentDisplay;
  }(_polymerElement.PolymerElement);

  _exports.LrnappStudioAssignmentDisplay = LrnappStudioAssignmentDisplay;
  window.customElements.define(LrnappStudioAssignmentDisplay.tag, LrnappStudioAssignmentDisplay);
});